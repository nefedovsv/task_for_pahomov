{"version":3,"sources":["constants/index.ts","components/RouteContainer/NoMatchPage.tsx","components/RouteContainer/PrivateRoute.tsx","components/RouteContainer/DataFormContainer/UseStyles.ts","components/RouteContainer/DataFormContainer/Copyright.tsx","components/RouteContainer/DataFormContainer/DataForm.tsx","action/addUserData.ts","components/RouteContainer/DataFormContainer/DataFormContainer.tsx","components/RouteContainer/Authentication.tsx","components/common/LogOutButton.tsx","action/addSecretKey.ts","components/RouteContainer/IndexRoute.tsx","reducers/userData.ts","reducers/secretKey.ts","reducers/index.tsx","store/configureStore.tsx","index.tsx"],"names":["ADD_USER_DATA","HAS_ERROR","IS_LOADING","DATA_SUCCESS","LOG_OUT","USER_ACTION","NoMatchPage","Button","variant","onClick","history","push","PrivateRoute","component","rest","isAuthenticated","useSelector","store","userData","Component","render","props","to","pathname","state","from","location","useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","Copyright","Typography","color","align","Link","href","Date","getFullYear","DataForm","dispatch","handleChange","userInput","classes","Container","maxWidth","CssBaseline","className","Avatar","TextField","required","fullWidth","id","label","autoComplete","autoFocus","value","name","onChange","type","password","FormControlLabel","control","Checkbox","payload","Grid","container","item","xs","Box","mt","DataFormContainer","useDispatch","React","newState","setUserInput","evt","currentTarget","defaultLocationState","Authentication","dataSuccess","LogOutButton","localStorage","clear","Request","createBrowserHistory","Saga","itemsFetchData","defaultSecretKey","jwt","takeEvery","makeRequest","a","fetch","response","json","isLoading","action","put","fetchMock","get","call","data","setItem","secretKey","reset","hasError","initialState","initialJwt","getItem","combineReducers","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","applyMiddleware","logger","run","exact","path","document","getElementById"],"mappings":"0PAAaA,EAAwB,gBACxBC,EAAoB,YACpBC,EAAqB,aACrBC,EAAuB,eACvBC,EAAkB,UAClBC,EAAsB,c,+CCDtBC,EAAwB,WACnC,OACE,kBAACC,EAAA,EAAD,CACEC,QAAQ,YACRC,QAAS,WACPC,EAAQC,KAAK,OAHjB,oH,iBCDSC,EAAe,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,UAAcC,EAAuB,6BAC5DC,EAAkBC,aAAY,SAACC,GAAD,OAAmBA,EAAMC,YACvDC,EAAiBN,EACvB,OACE,kBAAC,IAAD,iBACMC,EADN,CAEEM,OAAQ,SAAAC,GAAK,OACXN,EACE,kBAACI,EAAcE,GAEf,kBAAC,IAAD,CACEC,GAAI,CACFC,SAAU,IACVC,MAAO,CAAEC,KAAMJ,EAAMK,kB,0BChBtBC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CAC5C,UAAW,CACTC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,OAAOC,QAG1CC,MAAO,CACLC,UAAWP,EAAMQ,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQb,EAAMQ,QAAQ,GACtBN,gBAAiBF,EAAMG,QAAQW,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPV,UAAWP,EAAMQ,QAAQ,IAE3BU,OAAQ,CACNL,OAAQb,EAAMQ,QAAQ,EAAG,EAAG,Q,kBCnBnBW,EAAY,WACvB,OACE,kBAACC,EAAA,EAAD,CAAYzC,QAAQ,QAAQ0C,MAAM,gBAAgBC,MAAM,UACrD,kBACD,kBAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,gCAA3B,+CAEQ,KACP,IAAIC,MAAOC,cACX,M,0FCaMC,EAAW,SAACnC,GAAmB,IAClCoC,EAAsCpC,EAAtCoC,SAAUC,EAA4BrC,EAA5BqC,aAAcC,EAActC,EAAdsC,UAE1BC,EAAUjC,IAChB,OACE,gBAACkC,EAAA,EAAD,CAAWhD,UAAU,OAAOiD,SAAS,MACnC,gBAACC,EAAA,EAAD,MACA,uBAAKC,UAAWJ,EAAQzB,OACtB,gBAAC8B,EAAA,EAAD,CAAQD,UAAWJ,EAAQnB,QACzB,gBAAC,IAAD,OAEF,gBAACQ,EAAA,EAAD,CAAYpC,UAAU,KAAKL,QAAQ,MAAnC,8EAGA,uBAAKwD,UAAWJ,EAAQf,MACtB,gBAACqB,EAAA,EAAD,CACE1D,QAAQ,WACRkC,OAAO,SACPyB,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,iCACNC,aAAa,QACbC,WAAS,EACTC,MAAOd,EAAUe,KACjBA,KAAK,OACLC,SAAUjB,IAEZ,gBAACQ,EAAA,EAAD,CACE1D,QAAQ,WACRkC,OAAO,SACPyB,UAAQ,EACRC,WAAS,EACTE,MAAM,uCACNM,KAAK,WACLP,GAAG,WACHE,aAAa,mBACbE,MAAOd,EAAUkB,SACjBH,KAAK,WACLC,SAAUjB,IAEZ,gBAACoB,EAAA,EAAD,CACEC,QAAS,gBAACC,EAAA,EAAD,CAAUP,MAAM,WAAWvB,MAAM,YAC1CoB,MAAM,wEAER,gBAAC/D,EAAA,EAAD,CACEqE,KAAK,SACLR,WAAS,EACT5D,QAAQ,YACR0C,MAAM,UACNc,UAAWJ,EAAQb,OACnBtC,QAAS,kBAAWgD,ECjEvB,CACLmB,KAAMvE,EACN4E,QD+DgDtB,MAN1C,oFAUA,gBAACuB,EAAA,EAAD,CAAMC,WAAS,GACb,gBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,gBAACjC,EAAA,EAAD,CAAMC,KAAK,IAAI7C,QAAQ,SAAvB,yEAIF,gBAAC0E,EAAA,EAAD,CAAME,MAAI,GACR,gBAAChC,EAAA,EAAD,CAAMC,KAAK,IAAI7C,QAAQ,SACpB,kKAMX,gBAAC8E,EAAA,EAAD,CAAKC,GAAI,GACP,gBAAC,EAAD,S,8NEzFD,IAAMC,EAAkC,WAC7C,IAAM/B,EAAqBgC,cADwB,EAQjBC,cAChC,SAAClE,EAAkBmE,GAAnB,O,yVAAA,IAAiDnE,EAAjD,GAA2DmE,KANrC,CACtBjB,KAAM,GACNG,SAAU,KALuC,mBAQ5ClB,EAR4C,KAQjCiC,EARiC,KAkBnD,OACE,gBAAC,EAAD,CACElC,aAPiB,SAACmC,GAA8C,IAAD,EACzCA,EAAIC,cAApBpB,EADyD,EACzDA,KAAMD,EADmD,EACnDA,MACdmB,EAAa,eAAGlB,EAAOD,KAMrBd,UAAWA,EACXF,SAAUA,KCrBVsC,EAAsC,CAC1CtE,KAAM,CAAEF,SAAU,aAGPyE,EAAiB,SAAC3E,GAC7B,IAAMN,EAA2BC,aAC/B,SAACC,GAAD,OAAmBA,EAAMgF,YAAYlF,mBAGjCU,GAASJ,EAAMK,SAASF,OAASuE,GAAjCtE,KAEN,OAAIV,EAAwB,gBAAC,IAAD,CAAUO,GAAIG,IACnC,gBAAC,EAAD,OCbIyE,EAAyB,WACpC,IAAMzC,EAAqBgC,cAC3B,OACE,gBAAClF,EAAA,EAAD,CACEC,QAAQ,YACRC,QAAS,WACPgD,GCkCN/C,EAAQC,KAAK,KACbwF,aAAaC,QACN,CACLxB,KAAMyB,EACNpB,QAAS,CAAElE,iBAAiB,QDzC5B,WEASL,EAAU4F,c,uBDGEC,I,WA0CfC,IA/CJC,EAA+B,CACnCC,IAAK,kBACL3F,iBAAiB,GAGJ,SAAUwF,KAAV,iEACb,OADa,SACPI,YAAUN,EAAqBG,IADxB,uCAIf,IAAMI,GAAW,uCAAG,4BAAAC,EAAA,sEACKC,MVXS,0BUUd,cACZC,EADY,yBAEXA,EAASC,QAFE,2CAAH,qDAYV,SAASC,GAAUxC,GACxB,MAAO,CACLG,KAAMyB,EACNpB,QAAS,CAAEgC,UAAWxC,IAuB1B,SAAU+B,GAAeU,GAAzB,uEAEI,OAFJ,kBAEUC,aJrDkBjG,EIqDFgG,EAAOjC,QJpDxB,CACLL,KAAM5E,EACNiF,QAAS/D,KIgDb,OAII,OAJJ,SAIUiG,YAAIF,IAAU,IAJxB,OAQ6B,OAFzBG,IAAUC,IAAI,IAAKZ,GANvB,SAQmCa,aAAK,kBAAMV,QAR9C,YAQUW,EARV,yBAWM,OAXN,UAWYJ,YAAIF,IAAU,IAX1B,QAeM,OAFAd,aAAaqB,QAAQ,MAAOD,EAAKb,KAbvC,UAeYS,YA9BH,CACLvC,KAAMyB,EACNpB,QAAS,CAAEwC,UA4BaF,KAf5B,QAiBMH,IAAUM,QAjBhB,gCAoBI,OApBJ,oCAoBUP,YApDD,CACLvC,KAAMyB,EACNpB,QAAS,CAAE0C,UAkDQ,KApBvB,kCAjCO,IJlBqBzG,IImD5B,iB,+NEnDA,IAAI0G,GAA0B,CAC5BlD,KAAM,GACNG,SAAU,I,6jBCkBZ,IAAIgD,IAAsB,EACpBnB,GAAMP,aAAa2B,QAAQ,OAC1BD,KAAPnB,GCrBeqB,mBAAgB,CAC7B7G,SFGK,WAGJ,IAFDM,EAEA,uDAFmBoG,GACnBV,EACA,uCACA,OAAQA,EAAOtC,MACb,KAAK5E,EACH,O,2VAAO,IACFwB,EADL,CAEEkD,KAAMwC,EAAOjC,QAAQP,KACrBG,SAAUqC,EAAOjC,QAAQJ,WAE7B,QACE,OAAOrD,IEdXmG,SDHK,WAAoD,IAAlCnG,EAAiC,wDAAlB0F,EAAkB,uCACxD,OAAQA,EAAOtC,MACb,KAAKyB,EACH,OAAOa,EAAOjC,QAAQ0C,SAExB,QACE,OAAOnG,ICFXyF,UDMK,WAAqD,IAAlCzF,EAAiC,wDAAlB0F,EAAkB,uCACzD,OAAQA,EAAOtC,MACb,KAAKyB,EACH,OAAOa,EAAOjC,QAAQgC,UAExB,QACE,OAAOzF,ICXXyE,YDmBK,WAGJ,IAFDzE,EAEA,uDAFQ,CAAEkF,IAAK,GAAI3F,gBAAiB8G,IACpCX,EACA,uCACA,OAAQA,EAAOtC,MACb,KAAKyB,EACH,OAAO,MAAK7E,EAAZ,GAAsB0F,EAAOjC,QAAQwC,WACvC,KAAKpB,EACH,OAAO,MAAK7E,EAAZ,GAAsB0F,EAAOjC,SAC/B,QACE,OAAOzD,M,qBE9BPwG,GAAiBC,cAEVhH,GAAQiH,YACnBC,GACAC,YAAgBJ,GAAgBK,OAGlCL,GAAeM,IAAI/B,ICRnBnF,iBACE,kBAAC,IAAD,CAAUH,MAAOA,IACf,mBLGG,WACL,OACE,kBAAC,IAAD,CAAQP,QAASA,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6H,OAAK,EAACC,KAAK,IAAI3H,UAAWmF,IACjC,kBAAC,EAAD,CAAcwC,KAAK,WAAW3H,UAAWqF,IACzC,kBAAC,IAAD,CAAOrF,UAAWP,QKTtB,OAEFmI,SAASC,eAAe,W","file":"static/js/main.e4c2ff9d.chunk.js","sourcesContent":["export const ADD_USER_DATA: string = \"ADD_USER_DATA\";\r\nexport const HAS_ERROR: string = \"HAS_ERROR\";\r\nexport const IS_LOADING: string = \"IS_LOADING\";\r\nexport const DATA_SUCCESS: string = \"DATA_SUCCESS\";\r\nexport const LOG_OUT: string = \"LOG_OUT\";\r\nexport const USER_ACTION: string = \"USER_ACTION\";\r\nexport const API_SERVER: string = \"http://httpbin.org/get\";\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { history } from \"../RouteContainer/IndexRoute\";\r\n\r\nexport const NoMatchPage: React.FC = (): JSX.Element => {\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      onClick={() => {\r\n        history.push(\"/\");\r\n      }}\r\n    >\r\n      Вернуться на главную!\r\n    </Button>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStore } from \"../../interfaces\";\r\n\r\nexport const PrivateRoute = ({ component, ...rest }: RouteProps) => {\r\n  const isAuthenticated = useSelector((store: IStore) => store.userData);\r\n  const Component: any = component;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nexport const Copyright = () => {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://github.com/nefedovsv\">\r\n        Ваш сайт\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { useStyles } from \"./UseStyles\";\r\nimport { Copyright } from \"./Copyright\";\r\nimport { Dispatch } from \"redux\";\r\nimport { IUserData } from \"../../../interfaces/index\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { userAction } from \"../../../action/addUserData\";\r\n\r\ninterface IProps {\r\n  dispatch: Dispatch<any>;\r\n  handleChange: (evt: React.ChangeEvent<HTMLInputElement>) => void;\r\n  userInput: IUserData;\r\n}\r\n\r\nexport const DataForm = (props: IProps) => {\r\n  const { dispatch, handleChange, userInput } = props;\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Вход в аккаунт\r\n        </Typography>\r\n        <div className={classes.form}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Почта\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={userInput.name}\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Пароль\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={userInput.password}\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Запомни меня\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={(): any => dispatch(userAction(userInput))}\r\n          >\r\n            Войти в аккаунт\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Забыл пароль?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Еще нет аккаунта? Регистрация\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n","import { ADD_USER_DATA, USER_ACTION } from \"../constants/index\";\r\nimport { IUserData, IAddUserData } from \"../interfaces\";\r\n\r\nexport function addUserData(userData: IUserData): IAddUserData {\r\n  return {\r\n    type: ADD_USER_DATA,\r\n    payload: userData\r\n  };\r\n}\r\n\r\nexport function userAction(userData: IUserData): IAddUserData {\r\n  return {\r\n    type: USER_ACTION,\r\n    payload: userData\r\n  };\r\n}\r\n","import * as React from \"react\";\r\nimport { Dispatch } from \"redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { IUserData } from \"../../../interfaces/index\";\r\nimport { DataForm } from \"./DataForm\";\r\n\r\nexport const DataFormContainer: React.FC<{}> = () => {\r\n  const dispatch: Dispatch = useDispatch();\r\n\r\n  const init: IUserData = {\r\n    name: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  const [userInput, setUserInput] = React.useReducer(\r\n    (state: IUserData, newState): IUserData => ({ ...state, ...newState }),\r\n    init\r\n  );\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = evt.currentTarget;\r\n    setUserInput({ [name]: value });\r\n  };\r\n\r\n  return (\r\n    <DataForm\r\n      handleChange={handleChange}\r\n      userInput={userInput}\r\n      dispatch={dispatch}\r\n    />\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { Redirect, RouteComponentProps } from \"react-router\";\r\nimport { DataFormContainer } from \"./DataFormContainer/DataFormContainer\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStore } from \"../../interfaces\";\r\nimport { LocationState } from \"history\";\r\n\r\nconst defaultLocationState: LocationState = {\r\n  from: { pathname: \"/profile\" }\r\n};\r\n\r\nexport const Authentication = (props: RouteComponentProps) => {\r\n  const isAuthenticated: boolean = useSelector(\r\n    (store: IStore) => store.dataSuccess.isAuthenticated\r\n  );\r\n\r\n  let { from } = props.location.state || defaultLocationState;\r\n\r\n  if (isAuthenticated) return <Redirect to={from} />;\r\n  return <DataFormContainer />;\r\n};\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logOut } from \"../../action/addSecretKey\";\r\nimport { Dispatch } from \"redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport const LogOutButton: React.FC = (): JSX.Element => {\r\n  const dispatch: Dispatch = useDispatch();\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      onClick={() => {\r\n        dispatch(logOut());\r\n      }}\r\n    >\r\n      LogOut\r\n    </Button>\r\n  );\r\n};\r\n","import * as Request from \"../constants/index\";\r\nimport { IRequest, ISecretKey, IAddUserData } from \"../interfaces/index\";\r\nimport { addUserData } from \"../action/addUserData\";\r\nimport fetchMock from \"fetch-mock\";\r\nimport { history } from \"../components/RouteContainer/IndexRoute\";\r\nimport { call, put, takeEvery } from \"redux-saga/effects\";\r\n\r\nconst defaultSecretKey: ISecretKey = {\r\n  jwt: \"86fasfgfsogHGad\",\r\n  isAuthenticated: true\r\n};\r\n\r\nexport default function* Saga() {\r\n  yield takeEvery(Request.USER_ACTION, itemsFetchData);\r\n}\r\n\r\nconst makeRequest = async (): Promise<ISecretKey> => {\r\n  const response = await fetch(Request.API_SERVER);\r\n  return response.json();\r\n};\r\n\r\nexport function hasError(value: boolean): IRequest {\r\n  return {\r\n    type: Request.HAS_ERROR,\r\n    payload: { hasError: value }\r\n  };\r\n}\r\n\r\nexport function isLoading(value: boolean): IRequest {\r\n  return {\r\n    type: Request.IS_LOADING,\r\n    payload: { isLoading: value }\r\n  };\r\n}\r\n\r\nexport function dataSuccess(items: {\r\n  jwt: string;\r\n  isAuthenticated: boolean;\r\n}): IRequest {\r\n  return {\r\n    type: Request.DATA_SUCCESS,\r\n    payload: { secretKey: items }\r\n  };\r\n}\r\n\r\nexport function logOut(): IRequest {\r\n  history.push(\"/\");\r\n  localStorage.clear();\r\n  return {\r\n    type: Request.LOG_OUT,\r\n    payload: { isAuthenticated: false }\r\n  };\r\n}\r\n\r\nfunction* itemsFetchData(action: IAddUserData) {\r\n  try {\r\n    yield put(addUserData(action.payload));\r\n\r\n    yield put(isLoading(true));\r\n\r\n    fetchMock.get(\"*\", defaultSecretKey);\r\n\r\n    const data: ISecretKey = yield call(() => makeRequest());\r\n\r\n    if (data) {\r\n      yield put(isLoading(false));\r\n\r\n      localStorage.setItem(\"jwt\", data.jwt);\r\n\r\n      yield put(dataSuccess(data));\r\n\r\n      fetchMock.reset();\r\n    }\r\n  } catch (e) {\r\n    yield put(hasError(true));\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Router, Route } from \"react-router\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport { NoMatchPage } from \"./NoMatchPage\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { Authentication } from \"./Authentication\";\r\nimport { LogOutButton } from \"../common/LogOutButton\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nexport function IndexRoute() {\r\n  return (\r\n    <Router history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Authentication} />\r\n        <PrivateRoute path=\"/profile\" component={LogOutButton} />\r\n        <Route component={NoMatchPage} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","import { ADD_USER_DATA } from \"../constants/index\";\r\nimport { IUserData, IAddUserData } from \"../interfaces\";\r\n\r\nlet initialState: IUserData = {\r\n  name: \"\",\r\n  password: \"\"\r\n};\r\n\r\nexport function userData(\r\n  state: IUserData = initialState,\r\n  action: IAddUserData\r\n) {\r\n  switch (action.type) {\r\n    case ADD_USER_DATA:\r\n      return {\r\n        ...state,\r\n        name: action.payload.name,\r\n        password: action.payload.password\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as Request from \"../constants/index\";\r\nimport { IRequest } from \"../interfaces/index\";\r\n\r\nexport function hasError(state = false, action: IRequest) {\r\n  switch (action.type) {\r\n    case Request.HAS_ERROR:\r\n      return action.payload.hasError;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function isLoading(state = false, action: IRequest) {\r\n  switch (action.type) {\r\n    case Request.IS_LOADING:\r\n      return action.payload.isLoading;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nlet initialJwt: boolean = false;\r\nconst jwt = localStorage.getItem(\"jwt\");\r\njwt ? (initialJwt = true) : (initialJwt = false);\r\n\r\nexport function dataSuccess(\r\n  state = { jwt: \"\", isAuthenticated: initialJwt },\r\n  action: IRequest\r\n) {\r\n  switch (action.type) {\r\n    case Request.DATA_SUCCESS:\r\n      return { ...state, ...action.payload.secretKey };\r\n    case Request.LOG_OUT:\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { userData } from \"./userData\";\r\nimport { hasError, isLoading, dataSuccess } from \"./secretKey\";\r\n\r\nexport default combineReducers({\r\n  userData,\r\n  hasError,\r\n  isLoading,\r\n  dataSuccess\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport Saga from \"../action/addSecretKey\";\r\nimport rootReducer from \"../reducers\";\r\nimport logger from \"redux-logger\";\r\n//import thunk from \"redux-thunk\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware, logger)\r\n);\r\n\r\nsagaMiddleware.run(Saga);\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { store } from \"./store/configureStore\";\r\nimport { Provider } from \"react-redux\";\r\nimport { IndexRoute } from \"./components/RouteContainer/IndexRoute\";\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <IndexRoute />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}